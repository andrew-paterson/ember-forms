<h3>{{formMetaData.title}}</h3>
<form {{action "submit" on="submit"}}>
  {{#each formFields as |formField index|}}
    {{#if (or (eq formField.fieldType "input") (eq formField.fieldType "textarea")) }}
      {{component formField.component
        fieldId=formField.fieldId
        propertyName=formField.propertyName
        value=formField.value
        error=formField.error
        label=formField.label
        labelComponent=formField.labelComponent
        showLabel=formField.showLabel
        fieldUpdatedAction=(action "setFormValue")
        validateField=(action "validateField")
        validateOnInsert=formField.validateOnInsert
        validationRules=formField.validationRules
        type=formField.inputType
        trim=formField.trim
        default=formField.default
        disabled=formField.disabled
        class=formField.class
        hideSuccessValidation=formField.hideSuccessValidation
        required=formField.required
      }}
    {{/if}}
    {{#if (eq formField.fieldType "date") }}
      {{component formField.component
        fieldId=formField.fieldId
        propertyName=formField.propertyName
        value=formField.value
        error=formField.error
        label=formField.label
        labelComponent=formField.labelComponent
        showLabel=formField.showLabel
        fieldUpdatedAction=(action "setFormValue")
        validateField=(action "validateField")
        validateOnInsert=formField.validateOnInsert
        validationRules=formField.validationRules
        startDate=formField.startDate
        endDate=formField.endDate
        format=formField.format
        default=formField.default
        disabled=formField.disabled
        class=formField.class
        hideSuccessValidation=formField.hideSuccessValidation
        required=formField.required
      }}
    {{/if}}
    {{#if (eq formField.fieldType "select") }}
      {{component formField.component
        fieldId=formField.fieldId
        propertyName=formField.propertyName
        value=formField.value
        error=formField.error
        label=formField.label
        labelComponent=formField.labelComponent
        showLabel=formField.showLabel
        validateOnInsert=formField.validateOnInsert
        validationRules=formField.validationRules
        options=formField.options
        searchPlaceholder="Search"
        allowClear=true
        fieldUpdatedAction=(action "setFormValue")
        changedAction=(action "setFormValue")
        validateField=(action "validateField")
        default=formField.default
        disabled=formField.disabled
        class=formField.class
        hideSuccessValidation=formField.hideSuccessValidation
        required=formField.required
      }}
    {{/if}}
    {{#if (eq formField.fieldType "singleCheckbox") }}
      {{component formField.component
        customClasses='single-checkbox'
        fieldId=formField.fieldId
        propertyName=formField.propertyName
        value=formField.value
        error=formField.error
        label=formField.label
        labelComponent=formField.labelComponent
        showLabel=formField.showLabel
        validateOnInsert=formField.validateOnInsert
        validationRules=formField.validationRules
        options=formField.options
        searchPlaceholder="Search"
        allowClear=true
        fieldUpdatedAction=(action "setFormValue" formField.fieldId)
        changedAction=(action "setFormValue" formField.fieldId)
        default=formField.default
        validateField=(action "validateField")
        disabled=formField.disabled
        class=formField.class
        hideSuccessValidation=formField.hideSuccessValidation
        required=formField.required
      }}
    {{/if}}
    {{#if (eq formField.fieldType "radioButtonGroup") }}
      {{component formField.component
        fieldId=formField.fieldId
        customClasses='radio-button-group'
        propertyName=formField.propertyName
        value=formField.value
        error=formField.error
        label=formField.label
        options=formField.radioButtons
        labelComponent=formField.labelComponent
        showLabel=formField.showLabel
        validateOnInsert=formField.validateOnInsert
        validationRules=formField.validationRules
        searchPlaceholder="Search"
        allowClear=true
        fieldUpdatedAction=(action "setFormValue" formField.fieldId)
        changedAction=(action "setFormValue"  formField.fieldId)
        default=formField.default
        validateField=(action "validateField")
        disabled=formField.disabled
        class=formField.class
        hideSuccessValidation=formField.hideSuccessValidation
        required=formField.required
      }}
    {{/if}}
    {{#if (eq formField.fieldType "textSeparator") }}
        {{component formField.component
          text=formField.text
          textElement=formField.textElement
        }}
    {{/if}}
    {{#if (eq formField.fieldType "customComponent") }}
      {{component formField.component}}
    {{/if}}
  {{/each}}
  {{custom-elements/form-submit-input value=submitButtonText requestInFlight=requestInFlight}}
</form>